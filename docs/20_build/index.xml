<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Build on AWS Modernization Workshop Sample Docs</title>
    <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/</link>
    <description>Recent content in Build on AWS Modernization Workshop Sample Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setup Environment</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/1_setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/1_setup/</guid>
      <description>Building a workshop leverages several tools:
 Git Hugo Hugo learn theme CloudFormation templates  1. Clone Sample Repo AWS Modernization Workshops are powered by the Hugo Framework. Hugo uses markdown files to generate HTML assets so if your experts have experience with writing documentations on GitHub README&amp;rsquo;s, this should be very familiar!
If not, that is also OK as there are a plethora of documentations to help out someone just starting.</description>
    </item>
    
    <item>
      <title>Edit and Build</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/2_editing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/2_editing/</guid>
      <description>Directory Tree Directory of artifacts you will add, change, delete during the course of building a workshop.
/ |-content |---_index.md |---introduction |------_index.md |---partner setup |---module1 |---module2 |---module3 |---conclusion |---cleanup |-static |---images |config.toml  Editing Hugo uses markdown to generate static HTML pages. This makes it easier to create a web based workshop as all you need to do is create documents using markdown and Hugo will create the pretty html for you.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/3_testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/3_testing/</guid>
      <description>Testing As you are creating your workshop, test through the steps you are writing down for the customers. This will ensure each part of the workshop is functional and working. When you feel like the workshop is technically complete, have a few other technical people test it. For now, have them run hugo server and connect to localhost:1313 to view the workshop and follow the steps.
Once you have ironed out flow issues, have a few non-technical check the site for grammatical errors.</description>
    </item>
    
    <item>
      <title>Publish</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/4_publish/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/4_publish/</guid>
      <description>Cleanup  Remove the directory docs, hugo-docs-content, samples, and public.
 Cleanup any unused artifacts, be sure to look in static/images  Publish Now that your workshop is ready, reach out to your PSA or SA and have them follow the process for getting your workshop published.
High level steps  The SA will review your submission and makes sure everything works.
 The SA will request a repo under aws-samples with the naming standard aws-modernization-workshop-with-{companyname} Once the repo is created, you will fork this repo, copy the content of your workshop to this repo, then issue a pull request.</description>
    </item>
    
  </channel>
</rss>
